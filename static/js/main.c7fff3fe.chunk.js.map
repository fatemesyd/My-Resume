{"version":3,"sources":["component/Navbar.js","component/Fullpage.js","component/DownIcon.js","section/TitlesSection.js","section/AboutSection.js","component/SkillCard.js","section/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Navbarmenu","Navbar","className","collapseOnSelect","expand","Toggle","aria-controls","Collapse","id","Nav","Link","href","onclick","Component","Fullpage","children","this","props","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxWidth","src","icon","TitlesSection","state","color","changeColor","bind","setState","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","console","log","name","AboutSection","sections","items","p","content","SkillCard","skill","image","SkillSection","eachSkill","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"6ZAyBeA,E,uKAlBP,OACA,kBAACC,EAAA,EAAD,CAAQC,UAAU,YAAYC,kBAAgB,EAACC,OAAO,MACtD,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,yBACpB,kBAACC,EAAA,EAAD,CAAKP,UAAU,WACf,kBAACO,EAAA,EAAIC,KAAL,CAAUC,KAAK,eAEf,kBAACF,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CAAUC,KAAK,SAASC,QAAQ,gBAAhC,SAEA,kBAACH,EAAA,EAAIC,KAAL,CAAUC,KAAK,WAAf,iB,GAZeE,a,QCSVC,G,6KAVF,IACEC,EAAYC,KAAKC,MAAjBF,SACP,OACI,yBAAKb,UAAS,mBAAcc,KAAKC,MAAMf,WAAa,KACnDa,O,GALUF,c,eCuBRK,G,MAxBE,SAACD,GACd,OACI,yBACAE,QAASF,EAAME,QACfC,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,eAAgB,SAChBC,aAAc,QACdC,UAAW,sBAGb,yBACEN,MAAO,CACLO,SAAU,SAGZ,yBAAKC,IAAKX,EAAMY,W,QCoDXC,E,kDA/Db,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,SAET,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBALP,E,0DASZlB,KAAKmB,SAAS,CACZH,MAA4B,UAArBhB,KAAKe,MAAMC,MAAoB,UAAY,Y,+BAI5C,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CAAU9B,UAAU,SAClB,wBACEA,UAAU,QACVkB,MAAO,CACLY,MAAOhB,KAAKe,MAAMC,OAEpBI,YAAapB,KAAKiB,YAClBI,aAAc,WACZ,EAAKJ,gBAGNK,EAAKC,OAER,6BACE,4BAAKD,EAAKE,WAEZ,yBAAKtC,UAAU,iBACZuC,OAAOC,KAAKJ,EAAKK,OAAOC,KAAI,SAAAC,GAC3B,OACE,yBAAK3C,UAAU,QACb,kBAAC,aAAD,CAAY4C,IAAKR,EAAKK,MAAME,WAMtC,kBAAC,OAAD,CACEE,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IACVC,MAAO,GAEP,kBAAC,EAAD,CACExB,KAAMS,EAAKgB,MAAMC,KACjBpC,QAAS,kBAAMqC,QAAQC,IAAI,kBAG/B,kBAAC,UAAD,CAASC,KAAK,QAAQxD,UAAU,iB,GA1DZW,aC+Bb8C,G,6KA9BP,OACA,6BACA,kBAAC,EAAD,CAAUzD,UAAU,SAASM,GAAG,UAChC,4BAAK8B,EAAKsB,SAAS,GAAGrB,OACtB,6BACKD,EAAKsB,SAAS,GAAGC,MAAMjB,KAAI,SAAAkB,GAC1B,OAAO,2BAAIA,EAAEC,cAGlB,kBAAC,OAAD,CACAhB,YAAY,SACZC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IACVC,MAAO,GAEP,kBAAC,EAAD,CACExB,KAAMS,EAAKgB,MAAMC,KACjBpC,QAAS,kBAAMqC,QAAQC,IAAI,kBAG/B,kBAAC,UAAD,CAASC,KAAK,SAASxD,UAAU,iB,GAzBbW,cCYZmD,G,6KAfF,IACEC,EAASjD,KAAKC,MAAdgD,MACP,OACI,yBAAK/D,UAAU,QACX,yBAAKA,UAAU,iBACX,yBAAK0B,IAAKqC,EAAMF,QAAQG,SAE5B,yBAAKhE,UAAU,uBACX,4BAAK+D,EAAMF,QAAQxB,a,GATf1B,cCuBTsD,G,6KAjBP,OAEI,kBAAC,EAAD,CAAUjE,UAAU,SAChB,4BAAKoC,EAAKsB,SAAS,GAAGrB,OACtB,yBAAKrC,UAAU,iBACVoC,EAAKsB,SAAS,GAAGC,MAAMjB,KAAI,SAAAwB,GACxB,OACI,kBAAC,EAAD,CAAWH,MAAOG,a,GAVnBvD,cCwBZwD,G,6KAdX,OACE,yBAAKnE,UAAU,OAEb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,W,GAVUW,cCDEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,a","file":"static/js/main.c7fff3fe.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Nav,Navbar} from 'react-bootstrap';\r\n\r\n\r\nclass Navbarmenu extends Component{\r\n    render(){\r\n        return(\r\n        <Navbar className=\"color-nav\" collapseOnSelect expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#features\"></Nav.Link>\r\n        </Nav>\r\n        <Nav>\r\n          <Nav.Link href=\"#about\" onclick=\"myFunction()\">About</Nav.Link>\r\n    \r\n          <Nav.Link href=\"#skills\">Skills</Nav.Link>\r\n        </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar> \r\n        )\r\n    };\r\n}\r\n\r\nexport default Navbarmenu","import React, {Component} from 'react';\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component{\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n            {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage","import React, {Component} from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n    return (\r\n        <div\r\n        onClick={props.onClick}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"-34px\",\r\n          transform: \"translateY(-45px)\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            maxWidth: \"25px\",\r\n          }}\r\n        >\r\n          <img src={props.icon} />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DownIcon","import React, { Component } from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport \"./TitlesSection.css\";\r\nimport DownIcon from \"../component/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitlesSection extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      color: \"black\"\r\n    };\r\n    this.changeColor = this.changeColor.bind(this);\r\n  }\r\n\r\n  changeColor() {\r\n    this.setState({\r\n      color: this.state.color === \"black\" ? \"#fb9d96\" : \"black\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <h1\r\n            className=\"title\"\r\n            style={{\r\n              color: this.state.color\r\n            }}\r\n            onMouseOver={this.changeColor}\r\n            onMouseLeave={() => {\r\n              this.changeColor();\r\n            }}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n          <DownIcon\r\n            icon={data.icons.down}\r\n            onClick={() => console.log(\"im working\")}\r\n        />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesSection;\r\n","import React, {Component} from \"react\";\r\nimport data from \"../data.json\";\r\nimport './AboutSection.css'\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport DownIcon from \"../component/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass AboutSection extends Component{\r\n    render(){\r\n        return(\r\n        <div>    \r\n        <Fullpage className=\"second\" id=\"#about\">\r\n        <h3>{data.sections[0].title}</h3>\r\n        <div>\r\n            {data.sections[0].items.map(p =>\r\n            { return <p>{p.content}</p>; })}\r\n        </div>\r\n        </Fullpage>\r\n         <Link\r\n         activeClass=\"active\"\r\n         to=\"skills\"\r\n         spy={true}\r\n         smooth={true}\r\n         offset={0}\r\n         duration={500}\r\n         delay={0}\r\n       >\r\n         <DownIcon\r\n           icon={data.icons.down}\r\n           onClick={() => console.log(\"im working\")}\r\n       />\r\n       </Link>\r\n       <Element name=\"skills\" className=\"element\" />\r\n       </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AboutSection;","import React, {Component} from \"react\";\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n    render(){\r\n        const {skill} = this.props;\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"image-wrapper\">\r\n                    <img src={skill.content.image}></img>\r\n                </div>\r\n                <div className=\"skill-title-wrapper\">\r\n                    <h4>{skill.content.title}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCard;","import React, {Component} from \"react\";\r\nimport Fullpage from \"../component/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from '../component/SkillCard';\r\nimport \"./SkillSection.css\";\r\n\r\nclass SkillSection extends Component{\r\n    render(){\r\n        \r\n        return(\r\n         \r\n            <Fullpage className=\"third\">\r\n                <h3>{data.sections[1].title}</h3>\r\n                <div className=\"cards-wrapper\">\r\n                    {data.sections[1].items.map(eachSkill => {\r\n                        return(\r\n                            <SkillCard skill={eachSkill}/>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fullpage>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default SkillSection;","import React, { Component } from \"react\";\nimport SnowStorm from 'react-snowstorm';\nimport $ from \"jquery\";\n\nimport Navbar from \"./component/Navbar\";\nimport TitlesSection from \"./section/TitlesSection\";\nimport AboutSection from \"./section/AboutSection\";\nimport SkillSection from \"./section/SkillSection\";\n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  render() {\n   \n    return (\n      <div className=\"App\">\n        \n        <Navbar />\n        <TitlesSection />\n        <AboutSection />\n        <SkillSection />\n        <SnowStorm />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}